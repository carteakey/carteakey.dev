<!DOCTYPE html>
<html lang="{{ metadata.language }}" class="scroll-smooth">

<head>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />

  {# Using locally hosted fonts (Plus Jakarta Sans + ET Book). Inter CDN removed. #}
  {# <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script> #}
  {# Moved away from Google Fonts to self-hosted fonts #}
  {# Moved away from PrismJS to highlight.js #}
  {# <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Caveat&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400&display=swap" rel="stylesheet">
  {# <script>hljs.highlightAll();</script> #}
  <meta name="generator" content="Eleventy">
  <link href="https://unpkg.com/prismjs@1.20.0/themes/prism-coy.css" rel="stylesheet"/>
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-DKK1XXJY42"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() {
      dataLayer.push(arguments);
    }
    gtag("js", new Date());

    gtag("config", "G-DKK1XXJY42");
  </script>

  <script>
    const isDarkMode = () =>
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches);
    if (isDarkMode()) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    // Accent color theme management
    const getAccentTheme = () => {
      return localStorage.accentTheme || "amber";
    };

    const setAccentTheme = (theme) => {
      localStorage.accentTheme = theme;
      updateAccentClasses(theme);
    };

    const updateAccentClasses = (theme) => {
      const proseElement = document.querySelector('.prose');
      if (proseElement) {
        // Remove all existing prose color classes
        const colorClasses = ['prose-gray', 'prose-slate', 'prose-zinc', 'prose-neutral', 'prose-stone', 'prose-red', 'prose-orange', 'prose-amber', 'prose-yellow', 'prose-lime', 'prose-green', 'prose-emerald', 'prose-teal', 'prose-cyan', 'prose-sky', 'prose-blue', 'prose-indigo', 'prose-violet', 'prose-purple', 'prose-fuchsia', 'prose-pink', 'prose-rose'];
        colorClasses.forEach(cls => proseElement.classList.remove(cls));
        
        // Add the new theme class
        proseElement.classList.add(`prose-${theme}`);
      }
    };

    // Apply saved accent theme on page load
    document.addEventListener('DOMContentLoaded', () => {
      updateAccentClasses(getAccentTheme());
    });
  </script>
  <script>
  function switchPrismTheme() {
    if (isDarkMode()) {
      var themeLink = document.querySelector('link[href="https://unpkg.com/prismjs@1.20.0/themes/prism-coy.css"]');
      if (themeLink){
        themeLink.setAttribute('href', 'https://unpkg.com/prismjs@1.20.0/themes/prism-twilight.css');
      }
    } else {
      var themeLink = document.querySelector('link[href="https://unpkg.com/prismjs@1.20.0/themes/prism-twilight.css"]');
      if (themeLink){
        themeLink.setAttribute('href', 'https://unpkg.com/prismjs@1.20.0/themes/prism-coy.css');
      }
    }
    Prism.highlightAll();
  }
  switchPrismTheme(); 
  </script>
  
  <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
  <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{ title or metadata.title }}</title>
  <meta name="description" content="{{ description or metadata.description }}" />
  <meta name="generator" content="{{ eleventy.generator }}" />
  
  {# Open Graph / Facebook Meta Tags #}
  <meta property="og:type" content="{% if templateClass == 'tmpl-post' %}article{% else %}website{% endif %}" />
  <meta property="og:url" content="{{ metadata.url }}{{ page.url }}" />
  <meta property="og:site_name" content="{{ metadata.title }}" />
  <meta property="og:title" content="{{ title or metadata.title }}" />
  <meta property="og:description" content="{{ description or metadata.description }}" />
  {% if image %}
  <meta property="og:image" content="{{ metadata.url }}{{ image }}" />
  {% else %}
  <meta property="og:image" content="{{ metadata.url }}/img/avatar.png" />
  {% endif %}
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta property="og:locale" content="en_US" />
  
  {# Article specific Open Graph tags #}
  {% if templateClass == 'tmpl-post' %}
  <meta property="article:published_time" content="{{ page.date | htmlDateString }}" />
  {% if updated %}
  <meta property="article:modified_time" content="{{ updated | htmlDateString }}" />
  {% endif %}
  <meta property="article:author" content="{{ metadata.author.name }}" />
  {% for tag in tags | filterTagList %}
  <meta property="article:tag" content="{{ tag }}" />
  {% endfor %}
  {% endif %}
  
  {# Twitter Card Meta Tags #}
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:url" content="{{ metadata.url }}{{ page.url }}" />
  <meta name="twitter:title" content="{{ title or metadata.title }}" />
  <meta name="twitter:description" content="{{ description or metadata.description }}" />
  {% if image %}
  <meta name="twitter:image" content="{{ metadata.url }}{{ image }}" />
  {% else %}
  <meta name="twitter:image" content="{{ metadata.url }}/img/avatar.png" />
  {% endif %}
  <meta name="twitter:creator" content="@carteakey" />
  <meta name="twitter:site" content="@carteakey" />
  
  {# Additional SEO Meta Tags #}
  <meta name="author" content="{{ metadata.author.name }}" />
  <link rel="canonical" href="{{ metadata.url }}{{ page.url }}" />
  
  {# Theme Color for mobile browsers #}
  <meta name="theme-color" content="#f59e0b" media="(prefers-color-scheme: light)" />
  <meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)" />
  
  <link rel="stylesheet" href="{{ '/css/tailwind.css' | url }}" />

  <link rel="alternate" type="application/atom+xml" title="{{ metadata.title }} - Atom Feed" href="{{ '/feed.xml' | url }}">
  
  {# JSON-LD Structured Data for Website #}
  {% if page.url == "/" %}
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "{{ metadata.title }}",
    "url": "{{ metadata.url }}",
    "description": "{{ metadata.description }}",
    "author": {
      "@type": "Person",
      "name": "{{ metadata.author.name }}",
      "email": "{{ metadata.author.email }}",
      "url": "{{ metadata.author.url }}"
    },
    "publisher": {
      "@type": "Person",
      "name": "{{ metadata.author.name }}",
      "url": "{{ metadata.url }}"
    },
    "potentialAction": {
      "@type": "SearchAction",
      "target": "{{ metadata.url }}/search?q={search_term_string}",
      "query-input": "required name=search_term_string"
    }
  }
  </script>
  {% endif %}
</head>
<body class="bg-gray-50 dark:bg-black font-sans">
  <div class="md:max-w-2xl lg:max-w-3xl mx-auto">
    <div class="prose prose-amber prose-lg prose-h1:text-3xl prose-h2:my-4 dark:prose-invert px-4 md:px-0">
      <nav class="flex w-full py-8 justify-end">

        {% set navPages = collections.all | eleventyNavigation %}

        <div class='justify-between flex flex-row w-full'>

          <span class="transition-all justify-self-start mt-5 px-0 py-2 hidden md:block">
            <a class="no-underline hover:underline font-bold font-et-book text-xl " href="{{ '/' | url }}">Kartikey Chauhan</a>
          </span>

          <span class="transition-all justify-self-start mt-5 px-0  py-2  md:hidden block">
            <a class="no-underline hover:underline font-bold text-xl " href="{{ '/' | url }}">{% feather "home" , class="block" %}</a>
          </span>

          <ul class="list-none mt-5 px-0 text-xl flex items-center">
            {# Main navigation items #}
            {%- for entry in navPages %}
              {% if entry.title == "About" or entry.title == "Blog" or entry.title == "Now" %}
                <span class="px-1 py-2 transition-all self-end">
                  <a class="font-bold no-underline hover:underline" href="{{ entry.url }}">{{ entry.title }}</a>
                </span>
              {% endif %}
            {%- endfor %}

            {# Dropdown for Gallery and Snippets #}
            <div class="relative" x-data="{ open: false, hover: false }" 
                 @mouseenter="hover = $screen('md')" 
                 @mouseleave="hover = false">
              <span class="px-1 py-2 transition-all self-end cursor-pointer">
                <button @click="open = !open" class="font-bold hover:underline inline-flex items-center gap-1">
                  ...
                  <span class="transform transition-transform duration-200" :class="{ 'rotate-180': open }">
                    {% feather "chevron-down", class="w-4 h-4 mt-1" %}
                  </span>
                </button>
              </span>
              <div
                class="absolute right-0 bg-gray-50 dark:bg-black border border-amber-200/20 dark:border-amber-700/20 rounded py-1 mt-1 min-w-[120px] shadow-lg z-50"
                x-show="open || hover"
                x-transition
                @click.away="open = false"
              >
                {%- for entry in navPages %}
                  {% if entry.title == "Gallery" or entry.title == "Vibes" or entry.title == "Snippets" or entry.title == "Projects" or entry.title == "CV" or entry.title == "...More" %}
                    <a class="block px-4 py-2 no-underline hover:underline font-bold" href="{{ entry.url }}">{{ entry.title }}</a>
                  {% endif %}
                {%- endfor %}
              </div>
            </div>

            {# Mobile: Show all navigation items
            <div class="md:hidden">
              {%- for entry in navPages %}
                {% if entry.title == "Gallery" or entry.title == "Snippets" or entry.title == "Projects" or entry.title == "CV" %}
                  <span class="px-1 py-2 transition-all self-end">
                    <a class="font-bold no-underline hover:underline" href="{{ entry.url }}">{{ entry.title }}</a>
                  </span>
                {% endif %}
              {%- endfor %}
            </div> #}
          </ul>
          

        </div>
        <button id="toggleDarkMode" class="self-center font-bold text-xs px-1 sm:px-3 sm:py-0 -mt-2 transition-all">
          {% feather "moon" , class="block dark:hidden" %}
          {% feather "sun" , class="hidden dark:block"%}
        </button>

      </nav>

      <main class="{% if fullWidth %}-mx-[calc(50vw-50%)] w-screen px-4 md:px-8{% endif %} {% if templateClass %}{{ templateClass }}{% endif %}">

        {{ content | safe }}

          <script>
            document
              .getElementById("toggleDarkMode")
              .addEventListener("click", function () {
                // console.log("Button Click!");
                if (isDarkMode()) {
                  localStorage.theme = "light";
                  document.documentElement.classList.remove("dark");
                } else {
                  localStorage.theme = "dark";
                  document.documentElement.classList.add("dark");
                }

                function switchPrismTheme() {
                  if (isDarkMode()) {
                    var themeLink = document.querySelector('link[href="https://unpkg.com/prismjs@1.20.0/themes/prism-coy.css"]');
                    if (themeLink){
                      themeLink.setAttribute('href', 'https://unpkg.com/prismjs@1.20.0/themes/prism-twilight.css');
                    }
                  } else {
                    var themeLink = document.querySelector('link[href="https://unpkg.com/prismjs@1.20.0/themes/prism-twilight.css"]');
                    if (themeLink){
                      themeLink.setAttribute('href', 'https://unpkg.com/prismjs@1.20.0/themes/prism-coy.css');
                    }
                    
                  }
                  Prism.highlightAll();
                }
                switchPrismTheme();

              });

          </script>
      </main>

      <footer class="flex w-full pt-8 pb-4 flex-col md:flex-row justify-between gap-4">
        {% if spotify.nowPlaying %}
        <div class="flex items-center not-prose">
          <img id="track-image" class="w-10 h-10 rounded-full mr-2 animate-spin-slow"
            src="{{ spotify.nowPlaying.albumImageUrl }}" alt="Album artwork for {{ spotify.nowPlaying.title }} by {{ spotify.nowPlaying.artist }}">
          <div class=''>
            <a href={{ spotify.nowPlaying.songUrl }} target='_blank' class='hover:underline'>
              <p id="track-name" class="text-sm font-bold ">{{ spotify.nowPlaying.title }}</p>
            </a>
            <p id="artist-name" class="text-xs text-gray-400">{{ spotify.nowPlaying.artist }}</p>
          </div>
        </div>
        {% endif %}
        <div class='flex flex-col md:flex-row gap-4 md:gap-2'>
          {# Social Links Group #}
          <div class='flex flex-row items-center gap-1 border-b md:border-b-0 md:border-r border-gray-200 dark:border-gray-700 pb-2 md:pb-0 md:pr-2'>
            <a class="p-1 sm:px-2 transition-all" href="https://www.linkedin.com/in/kartikeychauhan/"
              title="LinkedIn" aria-label="LinkedIn">{% feather "linkedin" %}</a>
            <a class="p-1 sm:px-2 transition-all" href="https://github.com/carteakey" title="GitHub"
              aria-label="GitHub">{% feather "github" %}</a>
          </div>
          
          {# Content Discovery Group #}
          <div class='flex flex-row items-center gap-1 border-b md:border-b-0 md:border-r border-gray-200 dark:border-gray-700 pb-2 md:pb-0 md:pr-2'>
            <a class="p-1 sm:px-2 transition-all" href="{{ '/search/' | url }}" title="Search" aria-label="Search">{% feather "search" %}</a>
            <a class="p-1 sm:px-2 transition-all" href="{{ '/blogroll/' | url }}" title="Blogroll" aria-label="Blogroll">{% feather "bookmark" %}</a>
          </div>
          
          {# Subscribe Group #}
          <div class='flex flex-row items-center gap-1'>
            <a class="p-1 sm:px-2 transition-all" href="{{ '/feed.xml' | url }}" title="Atom Feed" aria-label="Atom Feed">{% feather "rss" %}</a>
            <a class="p-1 sm:px-2 transition-all" href="{{ '/newsletter/' | url }}" title="Newsletter" aria-label="Newsletter">{% feather "mail" %}</a>
          </div>
        </div>
      </footer>

      {# Extended footer section #}
      <div class="border-t border-gray-200 dark:border-gray-700 pt-6 pb-8 not-prose">
        {# Accent theme slider #}
        <div class="flex items-center justify-center mb-6">
          <div x-data="{ 
            currentTheme: localStorage.accentTheme || 'amber',
            currentIndex: 7,
            themes: [
              { name: 'gray', label: 'Gray', color: 'bg-gray-500' },
              { name: 'slate', label: 'Slate', color: 'bg-slate-500' },
              { name: 'zinc', label: 'Zinc', color: 'bg-zinc-500' },
              { name: 'neutral', label: 'Neutral', color: 'bg-neutral-500' },
              { name: 'stone', label: 'Stone', color: 'bg-stone-500' },
              { name: 'red', label: 'Red', color: 'bg-red-500' },
              { name: 'orange', label: 'Orange', color: 'bg-orange-500' },
              { name: 'amber', label: 'Amber', color: 'bg-amber-500' },
              { name: 'yellow', label: 'Yellow', color: 'bg-yellow-500' },
              { name: 'lime', label: 'Lime', color: 'bg-lime-500' },
              { name: 'green', label: 'Green', color: 'bg-green-500' },
              { name: 'emerald', label: 'Emerald', color: 'bg-emerald-500' },
              { name: 'teal', label: 'Teal', color: 'bg-teal-500' },
              { name: 'cyan', label: 'Cyan', color: 'bg-cyan-500' },
              { name: 'sky', label: 'Sky', color: 'bg-sky-500' },
              { name: 'blue', label: 'Blue', color: 'bg-blue-500' },
              { name: 'indigo', label: 'Indigo', color: 'bg-indigo-500' },
              { name: 'violet', label: 'Violet', color: 'bg-violet-500' },
              { name: 'purple', label: 'Purple', color: 'bg-purple-500' },
              { name: 'fuchsia', label: 'Fuchsia', color: 'bg-fuchsia-500' },
              { name: 'pink', label: 'Pink', color: 'bg-pink-500' },
              { name: 'rose', label: 'Rose', color: 'bg-rose-500' }
            ],
            init() {
              this.currentIndex = this.themes.findIndex(t => t.name === this.currentTheme);
              if (this.currentIndex === -1) this.currentIndex = 7; // default to amber
            },
            updateTheme(index) {
              this.currentIndex = index;
              this.currentTheme = this.themes[index].name;
              setAccentTheme(this.currentTheme);
            }
          }" 
          x-init="init()"
          class="flex flex-col items-center gap-3 w-full max-w-md">
            
            <div class="flex items-center gap-3 w-full">
              <span class="text-sm text-gray-600 dark:text-gray-400 font-medium whitespace-nowrap">Theme</span>
              
              {# Custom slider track #}
              <div class="relative flex-1 h-8 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden">
                {# Better gradient background with proper color spacing #}
                <div class="absolute inset-0 rounded-full opacity-70" style="background: linear-gradient(to right, 
                  #6b7280 0%, #64748b 4.5%, #71717a 9%, #737373 13.5%, #78716c 18%, 
                  #dc2626 22.5%, #ea580c 27%, #f59e0b 31.5%, #eab308 36%, #84cc16 40.5%, 
                  #22c55e 45%, #10b981 49.5%, #14b8a6 54%, #06b6d4 58.5%, #0ea5e9 63%, 
                  #3b82f6 67.5%, #6366f1 72%, #8b5cf6 76.5%, #a855f7 81%, #d946ef 85.5%, 
                  #ec4899 90%, #f43f5e 94.5%, #f43f5e 100%)"></div>
                
                {# Slider handle #}
                <div 
                  class="absolute top-1 w-6 h-6 rounded-full shadow-lg cursor-pointer transform -translate-x-1/2 transition-all duration-200 border-2 border-white dark:border-gray-800"
                  :class="themes[currentIndex].color"
                  :style="`left: ${(currentIndex / (themes.length - 1)) * 100}%`"
                  @mousedown="isDragging = true"
                  @touchstart="isDragging = true">
                </div>
                
                {# Invisible input for interaction #}
                <input 
                  type="range" 
                  min="0" 
                  :max="themes.length - 1" 
                  :value="currentIndex"
                  @input="updateTheme(parseInt($event.target.value))"
                  class="absolute inset-0 w-full h-full opacity-0 cursor-pointer">
              </div>
              
              <span class="text-sm text-gray-600 dark:text-gray-400 font-medium whitespace-nowrap capitalize" x-text="themes[currentIndex].label"></span>
            </div>
          </div>
        </div>

        {# Enhanced navigation section - compact with separators #}
        <div class="text-center">
          <div class="flex flex-wrap justify-center items-center gap-2 text-sm max-w-5xl mx-auto">
            <a href="{{ '/about' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "user", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">About</span>
            </a>
            
            <a href="{{ '/now' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "clock", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Now</span>
            </a>
            
            <a href="{{ '/posts' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "edit-3", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Blog</span>
            </a>
            
            <a href="{{ '/cv' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "file-text", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">CV</span>
            </a>
            
            <span class="text-gray-400 dark:text-gray-600">|</span>
            
            <a href="{{ '/projects' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "code", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Projects</span>
            </a>
            
            <a href="{{ '/snippets' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "terminal", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Snippets</span>
            </a>
            
            <span class="text-gray-400 dark:text-gray-600">|</span>
            
            <a href="{{ '/gallery' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "camera", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Gallery</span>
            </a>
            
            <a href="{{ '/vibes' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "image", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Vibes</span>
            </a>
            
            <a href="{{ '/quotes' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "message-circle", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Quotes</span>
            </a>
            
            <span class="text-gray-400 dark:text-gray-600">|</span>
            
            <a href="{{ '/games' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "play", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Games</span>
            </a>
            
            <a href="{{ '/workouts' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "zap", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Workouts</span>
            </a>
            
            <span class="text-gray-400 dark:text-gray-600">|</span>
            
            <a href="{{ '/search' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "search", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Search</span>
            </a>
            
            <a href="{{ '/stats' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "bar-chart-2", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Stats</span>
            </a>
            
            <a href="{{ '/blogroll' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "bookmark", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Blogroll</span>
            </a>
            
            <a href="{{ '/bookmarks' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "book-open", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Bookmarks</span>
            </a>
            
            <a href="{{ '/newsletter' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "mail", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">Newsletter</span>
            </a>
            
            <a href="{{ '/more' | url }}" class="flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group">
              {% feather "plus", class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-current" %}
              <span class="text-gray-600 dark:text-gray-400 group-hover:text-current">More</span>
            </a>
          </div>
          
          {# Made with love section #}
          <div class="text-sm text-gray-600 dark:text-gray-400 mt-6">
            Made with ❤️ using <a href="https://www.11ty.dev/" class="hover:underline" target="_blank" rel="noopener">Eleventy</a> 
            and <a href="https://tailwindcss.com/" class="hover:underline" target="_blank" rel="noopener">Tailwind CSS</a>
          </div>
          
          <div class="text-xs text-gray-500 dark:text-gray-500 mt-2">
            © {{ metadata.author.name }} • 2025
          </div>
        </div>
      </div>
    </div>
  </div>

  {# Easter Eggs Section - Fun Hidden Features #}
  <script>
    // Easter Egg 1: Konami Code (↑↑↓↓←→←→BA)
    (() => {
      const konamiCode = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];
      let konamiIndex = 0;
      
      document.addEventListener('keydown', (e) => {
        const expectedKey = konamiCode[konamiIndex];
        const actualKey = e.key;
        
        // Check if the key matches (case-insensitive for letters)
        if (actualKey === expectedKey || actualKey.toLowerCase() === expectedKey.toLowerCase()) {
          konamiIndex++;
          if (konamiIndex === konamiCode.length) {
            triggerKonamiEasterEgg();
            konamiIndex = 0;
          }
        } else {
          konamiIndex = 0;
        }
      });
      
      function triggerKonamiEasterEgg() {
        // Create floating icons
        const icons = ['star', 'heart', 'zap', 'award', 'sparkles', 'gift', 'coffee', 'music'];
        for (let i = 0; i < 20; i++) {
          setTimeout(() => {
            createFloatingIcon(icons[Math.floor(Math.random() * icons.length)]);
          }, i * 100);
        }
        
        // Show celebratory message
        const msg = document.createElement('div');
        msg.innerHTML = `
          <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                      background: rgba(251, 191, 36, 0.95); color: black; padding: 2rem 3rem; 
                      border-radius: 1rem; font-size: 2rem; font-weight: bold; z-index: 9999;
                      box-shadow: 0 10px 40px rgba(0,0,0,0.3); animation: bounce 0.5s;">
            🎉 You found the Konami Code! 🎮
          </div>
        `;
        document.body.appendChild(msg);
        setTimeout(() => msg.remove(), 3000);
      }
      
      function createFloatingIcon(iconName) {
        const icon = document.createElement('div');
        const svgIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-${iconName}">
          ${getIconPath(iconName)}
        </svg>`;
        
        icon.innerHTML = svgIcon;
        icon.style.position = 'fixed';
        icon.style.left = Math.random() * window.innerWidth + 'px';
        icon.style.top = '-50px';
        icon.style.fontSize = (Math.random() * 20 + 20) + 'px';
        icon.style.color = getRandomColor();
        icon.style.zIndex = '9999';
        icon.style.pointerEvents = 'none';
        icon.style.animation = `float ${Math.random() * 3 + 3}s ease-in`;
        
        document.body.appendChild(icon);
        setTimeout(() => icon.remove(), 6000);
      }
      
      function getIconPath(name) {
        const paths = {
          'star': '<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>',
          'heart': '<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>',
          'zap': '<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>',
          'award': '<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>',
          'gift': '<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>',
          'coffee': '<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>',
          'music': '<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>',
          'sparkles': '<path d="M12 2v4M12 18v4M4.93 4.93l2.83 2.83M16.24 16.24l2.83 2.83M2 12h4M18 12h4M4.93 19.07l2.83-2.83M16.24 7.76l2.83-2.83"></path>'
        };
        return paths[name] || paths['star'];
      }
      
      function getRandomColor() {
        const colors = ['#f59e0b', '#ec4899', '#8b5cf6', '#3b82f6', '#10b981', '#ef4444', '#06b6d4'];
        return colors[Math.floor(Math.random() * colors.length)];
      }
    })();

    // Easter Egg 2: Secret Message on Double-Click Site Title
    (() => {
      document.addEventListener('DOMContentLoaded', () => {
        const siteTitles = document.querySelectorAll('nav a[href="/"], nav a[href="{{ "/" | url }}"]');
        
        siteTitles.forEach(titleLink => {
          let lastClickTime = 0;
          
          titleLink.addEventListener('click', (e) => {
            const currentTime = new Date().getTime();
            const timeDiff = currentTime - lastClickTime;
            
            if (timeDiff < 400 && timeDiff > 0) {
              // Double click detected
              e.preventDefault();
              showSecretMessage();
              lastClickTime = 0; // Reset to prevent triple click
            } else {
              lastClickTime = currentTime;
            }
          });
        });
      });
      
      function showSecretMessage() {
        const messages = [
          '🎭 You found a secret!',
          '🚀 Keep exploring!',
          '💎 Hidden gem unlocked!',
          '🎨 The devil is in the details!',
          '🔍 Curiosity rewarded!',
          '✨ Easter egg discovered!'
        ];
        
        const msg = document.createElement('div');
        const randomMsg = messages[Math.floor(Math.random() * messages.length)];
        msg.innerHTML = `
          <div style="position: fixed; bottom: 2rem; right: 2rem; 
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                      color: white; padding: 1rem 1.5rem; border-radius: 0.5rem; 
                      font-weight: 600; z-index: 9999; box-shadow: 0 4px 20px rgba(0,0,0,0.2);
                      animation: slideIn 0.3s ease-out;">
            ${randomMsg}
          </div>
        `;
        document.body.appendChild(msg);
        setTimeout(() => {
          msg.style.animation = 'slideOut 0.3s ease-in';
          setTimeout(() => msg.remove(), 300);
        }, 2500);
      }
    })();

    // Easter Egg 3: Sparkle Trail on Mouse Move (activated by triple-clicking footer)
    (() => {
      let sparkleMode = false;
      let footerClickCount = 0;
      let footerClickTimer;
      
      document.addEventListener('DOMContentLoaded', () => {
        const footer = document.querySelector('footer');
        
        if (footer) {
          footer.addEventListener('click', (e) => {
            footerClickCount++;
            clearTimeout(footerClickTimer);
            
            if (footerClickCount === 3) {
              sparkleMode = !sparkleMode;
              footerClickCount = 0;
              showSparkleNotification(sparkleMode);
            } else {
              footerClickTimer = setTimeout(() => {
                footerClickCount = 0;
              }, 500);
            }
          });
        }
        
        document.addEventListener('mousemove', (e) => {
          if (sparkleMode && Math.random() > 0.9) {
            createSparkle(e.clientX, e.clientY);
          }
        });
      });
      
      function createSparkle(x, y) {
        const sparkle = document.createElement('div');
        sparkle.innerHTML = '✨';
        sparkle.style.position = 'fixed';
        sparkle.style.left = x + 'px';
        sparkle.style.top = y + 'px';
        sparkle.style.pointerEvents = 'none';
        sparkle.style.fontSize = (Math.random() * 10 + 10) + 'px';
        sparkle.style.zIndex = '9999';
        sparkle.style.animation = 'sparkle 1s ease-out forwards';
        
        document.body.appendChild(sparkle);
        setTimeout(() => sparkle.remove(), 1000);
      }
      
      function showSparkleNotification(isActive) {
        const msg = document.createElement('div');
        msg.innerHTML = `
          <div style="position: fixed; top: 2rem; left: 50%; transform: translateX(-50%); 
                      background: rgba(251, 191, 36, 0.95); color: black; padding: 0.75rem 1.5rem; 
                      border-radius: 0.5rem; font-weight: 600; z-index: 9999;
                      box-shadow: 0 4px 15px rgba(0,0,0,0.2);">
            ✨ Sparkle mode ${isActive ? 'ON' : 'OFF'}!
          </div>
        `;
        document.body.appendChild(msg);
        setTimeout(() => msg.remove(), 2000);
      }
    })();

    // Easter Egg 4: Secret Click Counter (Shift + Click on theme slider)
    (() => {
      document.addEventListener('DOMContentLoaded', () => {
        let secretClicks = parseInt(localStorage.getItem('secretClicks') || '0');
        const themeSlider = document.querySelector('input[type="range"]');
        
        if (themeSlider) {
          themeSlider.addEventListener('click', (e) => {
            if (e.shiftKey) {
              secretClicks++;
              localStorage.setItem('secretClicks', secretClicks);
              
              if (secretClicks % 10 === 0) {
                showMilestone(secretClicks);
              }
            }
          });
        }
        
        function showMilestone(count) {
          const msg = document.createElement('div');
          const achievements = {
            10: '🥉 Bronze Clicker!',
            50: '🥈 Silver Clicker!',
            100: '🥇 Gold Clicker!',
            500: '💎 Diamond Clicker!',
            1000: '👑 Legendary Clicker!'
          };
          
          const achievement = achievements[count] || `🎯 ${count} Secret Clicks!`;
          
          msg.innerHTML = `
            <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); 
                        color: white; padding: 2rem 3rem; border-radius: 1rem; 
                        font-size: 1.5rem; font-weight: bold; z-index: 9999;
                        box-shadow: 0 10px 40px rgba(0,0,0,0.3); animation: bounce 0.5s;
                        text-align: center;">
              ${achievement}<br>
              <span style="font-size: 1rem; opacity: 0.9;">Total: ${count} clicks</span>
            </div>
          `;
          document.body.appendChild(msg);
          setTimeout(() => msg.remove(), 3000);
        }
      });
    })();

    // Add CSS animations
    const style = document.createElement('style');
    style.textContent = `
      @keyframes float {
        0% { transform: translateY(-50px) rotate(0deg); opacity: 1; }
        100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
      }
      @keyframes bounce {
        0%, 100% { transform: translate(-50%, -50%) scale(1); }
        50% { transform: translate(-50%, -50%) scale(1.1); }
      }
      @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
      }
      @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
      }
      @keyframes sparkle {
        0% { transform: scale(0) rotate(0deg); opacity: 1; }
        50% { transform: scale(1) rotate(180deg); opacity: 1; }
        100% { transform: scale(0) rotate(360deg); opacity: 0; }
      }
      .animate-spin-slow {
        animation: spin 8s linear infinite;
      }
      @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
      }
    `;
    document.head.appendChild(style);
  </script>
</body>
</html>
